package java_progs.progs;

import java.io.IOException;
import java.util."ImportListCollection";

import java_progs.aux.ArrayListAux;
import java_progs.aux.TemplatesAux;

public class TemplateClearCol {
    static int SIZE = "size";
    static int loopSize = "loopSize";
    
    private static void clearCol("ListCollection"<"Type"> list) {
        list.clear();
    }

    private static void computation("ListCollection"<"Type">[] lists, int iter) {
        int i = 0;
        while (!TemplatesAux.stop && i<iter) {
            clearCol(lists[i]);
            i++;
        }
    }

    public static void main(String[] args) throws IOException, InterruptedException {
        int iter = 0;
        try {
            @SuppressWarnings("unchecked")
            createCollectionInitArrayLeftSide lists createCollectionInitArrayRightSide
            for (int i = 0; i < loopSize; i++) {
                createNewCollectionLeftSide l createNewCollectionRightSide
                ArrayListAux.insertRandomNumbers(l,SIZE,""Type"");
                lists[i] = l;
            }
            long begin = System.nanoTime();
            long end = begin;
            while (end - begin < 1000000000/*1s*/ && iter < loopSize) {
                clearCol(lists[iter]);
                end = System.nanoTime();
                iter++;
            }
            TemplatesAux.sendStartSignalToOrchestrator(args[0], iter);
            TemplatesAux.launchTimerThread();
            computation(lists,iter);
        } catch (OutOfMemoryError e) {
            TemplatesAux.writeErrorInFile(""filename"", "Out of memory error caught by the program.\n" + e.getMessage());
        } 
        catch (Exception e) {
            TemplatesAux.writeErrorInFile(""filename"","Error caught by th program.\n"+e.getMessage());
        }
        finally {TemplatesAux.sendStopSignalToOrchestrator(args[0]);}
    }
}